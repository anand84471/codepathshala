@{
    ViewBag.Title = "Courses";
    Layout = null;
}

<!DOCTYPE html>

<head>
    <title>Zoom WebSDK</title>
    <meta charset="utf-8" />
    <link type="text/css" rel="stylesheet" href="https://source.zoom.us/1.7.9/css/bootstrap.css" />
    <link type="text/css" rel="stylesheet" href="https://source.zoom.us/1.7.9/css/react-select.css" />

    <meta name="format-detection" content="telephone=no">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
</head>
<body>
    <!-- import ZoomMtg dependencies -->
    <script src="https://source.zoom.us/1.7.9/lib/vendor/react.min.js"></script>
    <script src="https://source.zoom.us/1.7.9/lib/vendor/react-dom.min.js"></script>
    <script src="https://source.zoom.us/1.7.9/lib/vendor/redux.min.js"></script>
    <script src="https://source.zoom.us/1.7.9/lib/vendor/redux-thunk.min.js"></script>
    <script src="https://source.zoom.us/1.7.9/lib/vendor/jquery.min.js"></script>
    <script src="https://source.zoom.us/1.7.9/lib/vendor/lodash.min.js"></script>

    <!-- import ZoomMtg -->
    <script src="https://source.zoom.us/zoom-meeting-1.7.9.min.js"></script>

    <!-- import local .js file -->
    <script src="js/index.js"></script>
</body>

</html>
<script>
    (function () {
        debugger
        getToken();
        //activeCoursesProgress
    })();

    function beginJoin(signature) {
        ZoomMtg.init({
            leaveUrl: meetingConfig.leaveUrl,
            webEndpoint: meetingConfig.webEndpoint,
            success: function () {

                console.log(meetingConfig);
                console.log("signature", signature);
                $.i18n.reload(meetingConfig.lang);
                ZoomMtg.join({
                    meetingNumber: meetingConfig.meetingNumber,
                    userName: meetingConfig.userName,
                    signature: mettingSecret,
                    apiKey: meetingConfig.apiKey,
                    userEmail: meetingConfig.userEmail,
                    passWord: meetingConfig.passWord,
                    success: function (res) {
                        console.log("join meeting success");
                        console.log("get attendeelist");
                        ZoomMtg.getAttendeeslist({});
                        ZoomMtg.getCurrentUser({
                            success: function (res) {
                                console.log("success getCurrentUser", res.result.currentUser);
                            },
                        });
                    },
                    error: function (res) {
                        console.log(res);
                    },
                });
            },
            error: function (res) {
                console.log(res);
            },
        });
    }
    var meetingConfig;
    function getToken() {
        //debugger;
        $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/getzoomtoken?meeting_no=8296468244&role=0",
            success: function (data) {
                debugger;
                mettingSecret = data;
                startMeeting();
            }
        });
    }
    function startMeeting() {
        'use strict';
        const zoomMeeting = document.getElementById("zmmtg-root")
        //window.onpageshow=setCourseProgress();
        ZoomMtg.setZoomJSLib('https://source.zoom.us/1.7.9/lib', '/av');
        ZoomMtg.preLoadWasm();
        ZoomMtg.prepareJssdk();

        meetingConfig = {
            apiKey: "KmY3g2mzSE2_nXmueXfw2g",
            meetingNumber: "8296468244",
            userName: "anand",
            passWord: "725247",
            leaveUrl: "./Home",
            role: parseInt(0, 10),
            userEmail: "",
            signature: "eHUzSlBhQV9SSlcyLTlsNV9IQWFMQS4xMjM0NTY3ODkuMTU4MzE2OTUzODc3My4wLkJMNEtiM3FINGx5ZzA1MUZtbGJOcGtPRnlFQS9lQUR2bGllVzJNNGZJeWs9",

        };
        beginJoin(meetingConfig.signature);
    }
    var mettingSecret;
</script>