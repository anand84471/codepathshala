@{
    ViewBag.Title = "Tests";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_InstructorLayout.cshtml";
}
<div class="container-fluid" id="addNewCourseContainer">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Tests</h1>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#" onclick="callHome()">Home</a></li>
            @*<li class="breadcrumb-item"><a href="#" onclick="callViewAllAssignments()">Assignments</a></li>*@
            <li class="breadcrumb-item active" aria-current="page" id="breadcumbCurrentName">Tests</li>
        </ol>
    </div>
    <div class="card shadow mb-4">
        <div class="card-body" >
            <div class="table-responsive ">
                 <table id="customTableCodePathshala" class="table-responsive table-hover " style="display:none">
                    <thead class="thead-dark">
                        <tr>
                            <th >Test Name</th>
                            <th >Creation Date</th>
                            <th >Total No of Questions</th>
                            <th >Test type</th>
                            <th>Submissions</th>
                            <th >Actions</th>
                        </tr>
                    </thead>
                    
                    <tbody id="testQuestionsBody"></tbody>
                </table>
                    <div id="spinnerTests" class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="text-center" id="footerTests" style="display:none">
                <div class="card-body">
                    <h6 class="card-title"> You have not created any test</h6>
                    @*<p class="card-text">With supporting text below as a natural lead-in to additional content.</p>*@
                    <div id="assignmentContainer" class="assignmentContainer"></div>
                    <a id="addAssignmentButton" class="btn btn-primary" href="./CreateTest">Add new test</a>
                </div>
                <div class="card-footer text-muted">
                    Thank you!
                </div>
            </div>
        </div>
    </div>

<div class="modal fade top" id="testDetailsModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg modal-full-height modal-top" role="document">
        <!--Content-->
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header ">
                <h4 class="modal-title w-100 "> <b>Test Details:</b></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <!--Body-->
            <div class="modal-body" id="testDetailsModalBody">
               
            </div>
            <!--Footer-->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary " data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
        <!--/.Content-->
    </div>
</div>
<!-- Full Height Modal Right -->
<div class="modal fade" id="successDelete" tabindex="-1" role="dialog" aria-labelledby="infomodal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="card border-success modal-content">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="infoTitle">Success</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body text-success">
                    <h3 id="successResponseMessage">deleted successfully</h3>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="infomodal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="infoTitle">Confirm</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h3 id="confirmMessage">Are you sure to want to delete the test?</h3>
            </div>
            <div class="modal-footer">
                <button id="confirmDeletButtonForCourse" type="button" class="btn btn-primary" data-dismiss="modal">Yes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="errorAlertHeader" tabindex="-1" role="dialog" aria-labelledby="modalIndexCreatedTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="card border-danger modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalIndexCreatedTitle">Error</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-danger">
                <h3 id="errorAlertMessageBody">Course could not be deleted</h3>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
        (function () {
            'use strict';
            //window.addEventListener('load', function () {
            //    getTestDetails();
            //    // Fetch all the forms we want to apply custom Bootstrap validation styles to
            //}, false);
            onpageshow = getAllTestDetails();
        })();
        function searchToCustomTable() {
            var input, filter, table, tr, td, i, txtValue, a;
            input = document.getElementById("customTableCodePathshalaSearch");
            filter = input.value.toUpperCase();
            table = document.getElementById("customTableCodePathshala");
            tr = table.getElementsByTagName("tr");
            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
                a = tr[i].getElementsByTagName("th")[0];
                a = a.getElementsByTagName("button")[0];
                if (a) {
                    txtValue = a.textContent || a.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
        function getTestDetails(id) {
            $.ajax({
                headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/api/v1/Course/FetchTestDetails?id=".concat(id),
                success: function (data) {
                    if (data != null && data.response_code == 1) {
                        var questionDetails = data.mcq_questions;
                        var assignmentHtml = '<div class="card shadow mb-4 border-bottom-primary">'
                                    + '<div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">'
                                        + '<h6 class="m-0 font-weight-bold text-primary">Test Details</h6>'
                                         + '<div class="dropdown no-arrow">'
                                             + '<a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">'
                                                + '<i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>'
                                             + '</a>'
                                             //+ '<div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">'
                                             //    + '<a class="dropdown-item" href="#" onclick=requestEditTestDeails(' + id + ')>Edit Test</a>'
                                             //    + '<a class="dropdown-item" href="#" onclick=requestDeleteTest(' + id + ')>Delete Test</a>'
                                             //    + '<a class="dropdown-item" href="#" onclick=requestAddMcqTestQuestion(' + id + ')>Add Question</a>'
                                             //+ '</div>'
                                         + '</div>'
                                     + '</div>'
                                    + '<div class="card-body">'
                        assignmentHtml += '<dl class="row ml-3">'
                              + '<dt class="col-sm-3">Test name:</dt><dd class="col-sm-9">' + data.test_name + '</dd>'
                              + '<dt class="col-sm-3">Test description:</dt><dd class="col-sm-9">' + data.test_description + '</dd>'
                              + '<dt class="col-sm-3">Test Creation Date:</dt><dd class="col-sm-9">' + data.test_creation_datetime + '</dd>'
                              + '<dt class="col-sm-3">Test Updat Date:</dt><dd class="col-sm-9">' + data.test_updation_datetime + '</dd>'
                              + '<dt class="col-sm-3">Test Type:</dt><dd class="col-sm-9">Mcq</dd>'
                              + '</dl></div><h2 class="ml-3">Questions</h2>';
                        assignmentHtml += '<div class="card-body" style="padding:0">'
                                                + '<div class="table-responsive">'
                                                    + '<table id="coursesTable" class="table table-hover">'
                                                        + '<thead class="thead-dark">'
                                                            + '<tr>'
                                                                + '<th scope="col">S.No</th>'
                                                                + '<th scope="col">Question Statement</th>'
                                                                + '<th scope="col">Option1</th>'
                                                                + '<th scope="col">Option2</th>'
                                                                + '<th scope="col">Option3</th>'
                                                                + '<th scope="col">Option4</th>'
                                                                + '<th scope="col">Correct Option</th>'
                                                                + '<th scope="col">Time(sec)</th>'
                                                                + '<th scope="col">Marks</th>'
                                                                //+ '<th scope="col">Actions</th>'
                                                            + '</tr>'
                                                        + '</thead>'
                                                        + '<tbody>';
                        var rows = '';
                        if (questionDetails != null) {
                            for (var i = 0; i < questionDetails.length; i++) {
                                var sNo = i + 1;
                                rows += '<tr><th scope="row" >' + sNo + '</th>'
                                + '<td>' + questionDetails[i].question_statement + '</td><td>' + questionDetails[i].option1 + '</td><td>' + questionDetails[i].option2 + '</td><td>' + questionDetails[i].option3 + '</td><td>' + questionDetails[i].option4 + '</td><td>' + questionDetails[i].correct_option + '</td>'
                                + '<td>' + questionDetails[i].question_time_in_seconds + '</td><td>' + questionDetails[i].marks + '</td>'
                                //+ '<td>'
                                //    + '<button type="button" class="btn btn-link" class="list-group-horizontal"  onclick="requestUpdateMcqTestQuestion(' + questionDetails[i].question_id + ')">'
                                //        + '<i class="fas fa-edit fa-sm fa-fw mr-2 text-gray-400 m-1"></i>'
                                //    + '</button>'
                                //    + '<button type="button" class="btn btn-link" class="list-group-horizontal" onclick="requestDeleteMcqTestQuestion(' + questionDetails[i].question_id + ')" >'
                                //        + '<i class="fas fa-trash fa-sm fa-fw mr-2 text-gray-400 m-1"></i>'
                                //    + '</button>'
                                //+ '</td>'
                                + '</tr>';
                            }
                        }
                        assignmentHtml += rows;
                        assignmentHtml += '</tbody></table></div></div>';

                    }
                    $("#testDetailsModalBody").html(assignmentHtml);
                    $("#testDetailsModal").modal('show');
                }

            });
        }
    function getAllTestDetails() {
        debugger;
        $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/tests",
            success: function (data) {
                var x = $('#testQuestionsBody').empty();
                debugger;
                if (data != null && data.response_code == 1) {
                    var tests=data.tests;
                    for (var i = 0; i < tests.length; i++) {
                        if (tests[i].test_name.length > 30)
                        {
                            tests[i].test_name = tests[i].test_name.substring(0, 30) + "...";
                        }
                        var rows = '<tr><th scope="row" ><button type="button" class="btn btn-link"  onclick="getTestDetails('.concat(tests[i].test_id) + ')">' + tests[i].test_name + '</button></th>'
                        + '<td>' + tests[i].creation_date + '</td><td>' + tests[i].no_of_questions + '</td><td>' + tests[i].test_type + '</td>'
                        + '<td><button type="button" class="btn btn-link font-weight-bold" onclick="getTestSubmissions('.concat(tests[i].test_id) + ')">' + tests[i].no_of_submissions + '</button></td>'
                        +'<td>'
                            + '<button type="button" class="btn btn-link" class="list-group-horizontal" onclick=getViewTestDetails("' + tests[i].test_id + '")>'
                                +'<i class="fas fa-edit fa-sm fa-fw mr-2 text-gray-400 m-1"></i>'
                            +'</button>'
                            + '<button type="button" class="btn btn-link" class="list-group-horizontal" onclick=requestDeleteTest("' + tests[i].test_id + '") >'
                                +'<i class="fas fa-trash fa-sm fa-fw mr-2 text-gray-400 m-1"></i>'
                            + '</button>'
                        +'</td>'
                        +'</tr>';
                        $('#testQuestionsBody').append(rows);
                        $("#spinner").remove();
                        $("#customTableCodePathshala").show();
                    }
                    $('#customTableCodePathshala').DataTable();
                }
                else {
                    $("#footerTests").show();
                   
                }
                $("#spinnerTests").remove();
            }
    });
    }
    function getTestSubmissions(id) {
        debugger;
        $.ajax({
            url: '@Url.Action("TestSubmissions", "Instructor")',
            data: { "id": id },
            type: 'GET',
            success: function (data) {
                $("#body").html(data);
                window.history.pushState({ "html": data, "pageTitle": "Instructor" }, "", "TestSubmissions?id=".concat(id));
            }
        });
    }
    function getViewTestDetails(id) {
        debugger;
        $.ajax({
            url: '@Url.Action("ViewTest", "Instructor")',
            data: { "id": id },
            type: 'GET',
            success: function (data) {
                $("#body").html(data);
                window.history.pushState({ "html": data, "pageTitle": "Instructor" }, "", "ViewTest?id=".concat(id));
            }
        });
    }
    function requestDeleteTest(TestId) {
        $("#confirmMessage").text("Are you sure to want to delete the test?");
        $("#confirmDeletButtonForCourse").attr("onclick", "deleteTest(" + TestId + ")");
        $("#confirmDelete").modal('show');
    }
    function deleteTest(TestId) {
        $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/DeleteIndependentTest?TestId=".concat(TestId),
            success: function (data) {
                if (data != null && data.response_code == 1) {
                    $("#successResponseMessage").text("Test deleted successfully");
                    $("#successDelete").modal('show');
                    getAllTestDetails();
                }
                else {
                    $("#errorAlertMessageBody").text("Test could not be deleted");
                    $("#errorAlertHeader").modal('show');
                }
            }
        });
    }

</script>