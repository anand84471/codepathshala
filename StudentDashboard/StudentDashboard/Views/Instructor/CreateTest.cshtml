@{
    ViewBag.Title = "Create Test";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_InstructorLayout.cshtml";
}
<div class="container-fluid" id="addNewCourseContainer">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Create Test</h1>
    </div>
    <div class="card shadow mb-4">
        <!-- Card Header - Dropdown -->
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Create New Test</h6>
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item" href="./Contact">Save</a>
                    <a class="dropdown-item" href="./LogOut">Release</a>
                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#cancelModal">
                        <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                        Delete
                    </a>
                </div>
                <div class="modal fade" id="cancelModal" tabindex="-1" role="dialog" aria-labelledby="cancelModal" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Ready to delete the test?</h5>
                                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div class="modal-body">All the data of the current test will be gone.</div>
                            <div class="modal-footer">
                                <button class="btn btn-secondary" type="button" data-dismiss="modal">No</button>
                                <a class="btn btn-primary" href="./Home">Yes</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            <div class="card-body">
                <div class="alert alert-success" id="postsubmit" style="display:none" role="alert">
                   
                    Test added successfully 
                </div>
                <div id="testContainer" class="assignmentContainer"></div>
                <button id="addAssignmentButton" class="btn btn-primary  btn-block" onclick="addNewTest()">Add new Test</button>
            </div>
           
    </div>
</div>
<div class="modal fade" id="infomodal" tabindex="-1" role="dialog" aria-labelledby="infomodal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="infoTitle">Test created</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h3 id="infoMessage">Test added successfully</h3>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="invalidSubmittion" tabindex="-1" role="dialog" aria-labelledby="modalIndexCreatedTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="card border-danger modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalIndexCreatedTitle">Error</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-danger">
                <h3 id="courseIdGenerated">Some of the fields are empty</h3>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var totalNoOfQuestions = 0;
    function addNewTestQuestion() {
        if ($("#testName").val() == "" || $("#testDescription").val() == "")
        {
            $("#invalidSubmittion").modal("show");
            return;
        }
        var questionType = $("#selectTestTypeId").val();
        $("#selectTestTypeId").prop("disabled", true);
        $("#submitTestButton").show();
        switch (questionType) {
            case "sub":
                {
                    addNewSubjectiveTestQuestion();
                    break;
                }
            case "mcq":
                {
                    addNewMcqTestQuestion();
                    break;
                }
        }
    }
    function addNewTest() {
        $("#addAssignmentButton").remove();
        document.getElementById("testContainer").insertAdjacentHTML("beforeend",
            '<form>'
                                            + '<h5 class="card-title">Add Test Details</h5>'
                                            + '<div class="form-group row">'
                                                + '<label for="inputPassword" class="col-sm-3 col-form-label">Name of test</label>'
                                                + '<div class="col-sm-8">'
                                                    + '<input type="text" onchange="validateInputField(this)"  class="form-control" id="testName" placeholder="Enter name of test">'
                                                + '</div>'
                                            + '</div>'
                                            + '<div class="form-group row">'
                                                + '<label for="inputPassword" class="col-sm-3 col-form-label">Description of test</label>'
                                                + '<div class="col-sm-8">'
                                                    + '<textarea type="text" onchange="validateInputField(this)"  placeholder="Enter test description" id="testDescription" name="message" rows="2" class="form-control md-textarea"></textarea>'
                                                + '</div>'
                                            + '</div>'
                                            + '<div class="form-group row">'
                                                + '<label for="selectTestTypeId" class="col-sm-3 col-form-label">Select Test type:</label>'
                                                + '<div class="col-sm-8">'
                                                    + '<select class="form-control" id="selectTestTypeId">'
                                                        + '<option value="mcq">MCQ</option>'
                                                        + '<option value="sub">Subjective</option>'
                                                    + '</select>'
                                                + '</div>'
                                            + '</div>'
                                        
                                            + '<div id="testQuestionContainer"></div>'
                                            + '<h6 class="text-info" id="noOfTestQuestionsAdded">No of questions :0</h6>'
                                            + '<button type="button" class="btn btn-outline-primary  btn-block" onclick="addNewTestQuestion()">Add Question</button>'
                                             + '<button id="submitTestButton" style="display:none" type="button" class="btn btn-primary  btn-block" onclick="submitTest()">Submit</button>'
                                           
                            + '</form>'
                          
          );
    }
    function addNewMcqTestQuestion() {
        totalNoOfQuestions++;
        $("#noOfTestQuestionsAdded").text("No of questions :".concat(totalNoOfQuestions));
            document.getElementById("testQuestionContainer").insertAdjacentHTML("beforeend",
                
                 '<div class="assignment-mcq-section">'
                          + '<button type="button" class="btn close' + 'data-dismiss="alert" onclick="removeDiv(this)" aria-label="Close">'
                                    + '<span aria-hidden="true" class="ml-3">×</span>'
                          + '</button> '
                            + '<div class="form-group row">'
                                + '<label class="col-sm-3 col-form-label">Question statement</label>'
                                + '<div class="col-sm-8">'
                                    + '<input type="text" onchange="validateInputField(this)" class="form-control" name="question" placeholder="Enter question">'
                                + '</div>'
                            + '</div>'
                             + '<div class="form-group row">'
                            + '<label for="inputPassword" class="col-sm-3 col-form-label">Time for question</label>'
                            + '<div class="col-sm-8">'
                                + '<input type="tel" onchange="validateInputField(this)" maxlength="10" minsize="10" pattern=".{10,}"  oninput="this.value = this.value.replace(/[^0-9.]/g, \'\');" onchange="validateInputField(this)" name="timeTest" class="form-control"  placeholder="Enter Time in seconds">'
                            + '</div>'
                        + '</div>'
                          + '<div class="form-group row">'
                            + '<label for="inputPassword" class="col-sm-3 col-form-label">Marks</label>'
                            + '<div class="col-sm-8">'
                                + '<input type="tel" onchange="validateInputField(this)" maxlength="10" minsize="10" pattern=".{10,}"  oninput="this.value = this.value.replace(/[^0-9.]/g, \'\')" minsize onchange="validateInputField(this)" name="marksTest" class="form-control"  placeholder="Enter marks">'
                            + '</div>'
                        + '</div>'
                            + '<div class="form-group row">'
                                + '<label  class="col-sm-3 col-form-label">Option 1</label>'
                                + '<div class="col-sm-8 mb-2">'
                                    + '<input onchange="validateInputField(this)" type="text" class="form-control" name="option1" placeholder="Enter option 1">'
                                + '</div>'
                                + '<label class="col-sm-3 col-form-label">Option 2</label>'
                                + '<div class="col-sm-8 mb-2">'
                                    + '<input type="text" onchange="validateInputField(this)" class="form-control" name="option2" placeholder="Enter option 2">'
                                + '</div>'
                                + '<label  class="col-sm-3 col-form-label">Option 3</label>'
                                + '<div class="col-sm-8 mb-2">'
                                    + '<input type="text" onchange="validateInputField(this)" class="form-control" name="option3" placeholder="Enter option 3">'
                                + '</div>'
                                + '<label  class="col-sm-3 col-form-label">Option 4</label>'
                                + '<div class="col-sm-8">'
                                    + '<input type="text" onchange="validateInputField(this)" class="form-control" name="option4" placeholder="Enter option 4">'
                                + '</div>'
                                + '<hr />'
                            + '</div>'
                            + '<div class="form-group row">'
                                                                + '<label class="col-sm-3 col-form-label">Select Correct Option</label>'
                                                                + '<div class="col-sm-8">'
                                                                    + '<select class="form-control" name="correctOption">'
                                                                        + '<option value="-1">select...</option>'
                                                                        + '<option value="1">Option 1</option>'
                                                                        + '<option value="2">Option 2</option>'
                                                                        + '<option value="3">Option 3</option>'
                                                                        + '<option value="4">Option 4</option>'
                                                                    + '</select>'
                                                                + '</div>'
                                                            + '</div>'
                                                            +'<hr>'
                    + '</div>'
                );
        }
    function validateInputField(id) {
        if ($(id).val() == "") {
            $(id).addClass("is-invalid");
        }
        else {
            $(id).addClass("is-valid").removeClass("is-invalid");
        }
    }
    function submitTest() {
        debugger;
        var testName = $("#testName").val();
        var testDescription = $("#testDescription").val();
        var testType = $("#selectTestTypeId").val();
        var questions = [];
        if (testType == "mcq") {
            var question = $("[name='question']");
            var option1 = $("[name='option1']");
            var option2 = $("[name='option2']");
            var option3 = $("[name='option3']");
            var option4 = $("[name='option4']");
            var marksForQuestion = $("[name='marksTest']");
            var timeForQuestion = $("[name='timeTest']");
            var correctOption = $("[name='correctOption']");
            for (var i = 0; i < question.length; i++) {
                if (!question[i].disabled) {
                    if (question[i].classList.contains("is-invalid") || option1[i].classList.contains("is-invalid") || option2[i].classList.contains("is-invalid") ||
                        option3[i].classList.contains("is-invalid") || option4[i].classList.contains("is-invalid") ||
                        question[i].value == "" || option1[i].value == "" || option2[i].value == "" || option3[i].value == "" || option4[i].value == "" || correctOption[i].value == "-1"
                        ) {
                        if (question[i].value == "") {
                            question[i].classList.add("is-invalid");
                        }
                        else if (option1[i].value == "") {
                            option1[i].classList.add("is-invalid");
                        }
                        else if (option2[i].value == "") {
                            option2[i].classList.add("is-invalid");
                        }
                        else if (option3[i].value == "") {
                            option3[i].classList.add("is-invalid");
                        }
                        else if (option4[i].value == "") {
                            option4[i].classList.add("is-invalid");
                        }
                        else if (correctOption[i].value == "") {
                            correctOption[i].classList.add("is-invalid");

                        }
                        $("#invalidSubmittion").modal('show');
                        return;
                    }


                    var Question = {
                        "question_statement": question[i].value,
                        "option1": option1[i].value,
                        "option2": option2[i].value,
                        "option3": option3[i].value,
                        "option4": option4[i].value,
                        "marks":parseInt(marksForQuestion[i].value),
                        "question_time_in_seconds": parseInt(timeForQuestion[i].value),
                        "correct_option": parseInt(correctOption[i].value)
                    }
                    questions.push(Question);
                }
            }
        }
        else if (assignmentType = "sub") {
            var question = $("[name='subjectiveQuestionStatement".concat(indexcount) + "']");
            for (var i = 0; i < question.length; i++) {
                if (!question[i].disabled) {
                    var Question = {
                        "question_statement": question[i].value,
                    }
                    questions.push(Question);
                }
            }
        }
        var _data =
            {
                "test_name": testName,
                "test_description": testDescription,
                "test_type": testType,
                "mcq_questions": questions,
               
                "subjective_questions": questions
            }
        $.ajax({
            headers: { "Authorization": 'Bearer ' + localStorage.getItem('access_token') },
            type: "POST",
            data: JSON.stringify(_data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/api/v1/instructor/addnewtest",
            success: function (data) {
                debugger;
                if (data != null && data.response_code == 1) {
                    $('#infomodal').modal('show');
                    $("#testContainer").fadeOut();
                    $("#postsubmit").append('<button  class="btn btn-link"  onclick="callViewTest(' + data.assignment_id + ')">View Test&rarr;</button>');
                    $("#postsubmit").show();
                }
                else {

                }
            }
        });
    }
        function removeDiv(elem) {
            $(elem).parent('div').remove();
            totalNoOfQuestions--;
            $("#noOfTestQuestionsAdded").text("No of questions :".concat(totalNoOfQuestions));
            if (totalNoOfQuestions == 0) {
                $("#selectTestTypeId").prop("disabled", false);
            }
        }
        function addNewSubjectiveTestQuestion() {
            totalNoOfQuestions++;
            document.getElementById("testQuestionContainer").insertAdjacentHTML("beforeend",
            '<div class="card test-subjective-section">'
              + '<button type="button" class="btn close' + 'data-dismiss="alert" onclick="removeDiv(this)" aria-label="Close">'
                                    + '<span aria-hidden="true" class="ml-3">×</span>'
                          + '</button> '
                + '<div class="card-body">'
                    + '<div class="form-group row">'
                        + '<label for="inputPassword" class="col-sm-3 col-form-label">Question statement</label>'
                        + '<div class="col-sm-8">'
                            + '<input type="text" class="form-control" id="inputPassword" placeholder="Enter question">'
                        + '</div>'
                    + '</div>'
                + '</div>'
            + '</div>'
            );
        }
        addNewTest();
</script>


